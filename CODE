# Importação de bibliotecas
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error
import mlflow
import mlflow.sklearn

# Configuração do experimento no MLflow
mlflow.set_experiment("Gelato_Magico_Experimento")

# Função principal
def main():
    # Simulação de dados (Temperatura e Vendas)
    np.random.seed(42)
    temperaturas = np.random.uniform(20, 40, 100)  # Temperatura entre 20°C e 40°C
    vendas = temperaturas * 15 + np.random.normal(0, 10, 100)  # Relação linear com ruído

    # Criação do DataFrame
    df = pd.DataFrame({"Temperatura": temperaturas, "Vendas": vendas})

    # Divisão dos dados em treinamento e teste
    X = df[["Temperatura"]]
    y = df["Vendas"]
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

    # Treinamento do modelo
    model = LinearRegression()
    model.fit(X_train, y_train)

    # Previsões e avaliação do modelo
    y_pred = model.predict(X_test)
    mae = mean_absolute_error(y_test, y_pred)
    print(f"Erro Médio Absoluto: {mae:.2f}")

    # Registro no MLflow
    with mlflow.start_run():
        # Logar parâmetros e métricas
        mlflow.log_param("algoritmo", "Regressão Linear")
        mlflow.log_metric("mean_absolute_error", mae)

        # Logar o modelo treinado
        mlflow.sklearn.log_model(model, "model")

        print("Modelo registrado no MLflow com sucesso!")

if __name__ == "__main__":
    main()
